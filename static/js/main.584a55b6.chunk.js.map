{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","firstName","setFirstName","lastName","setLastName","people","setPeople","className","class","onSubmit","e","preventDefault","person","poeple","type","placeholder","name","value","onChange","target","slice","map","index","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sNA+DeA,EA1DH,WACZ,MAAiCC,mBAAS,IAA1C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA+BF,mBAAS,IAAxC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAeC,EAAf,KAeE,OACE,qCACA,sBAAKC,UAAU,YAAf,UACA,oBAAIC,MAAM,UAAV,8BACJ,uBAAMD,UAAU,OAAOE,SAjBJ,SAACC,GAElB,GADAA,EAAEC,iBACCV,GAAaE,EAAS,CACxB,IAAMS,EAAQ,CAACX,YAAWE,YAC1BG,GAAU,SAAAO,GACT,MAAM,GAAN,mBAAWR,GAAX,CAAmBO,OAErBV,EAAa,IACbE,EAAY,MASd,UACA,uBAAOU,KAAK,OACZC,YAAY,wBACZC,KAAK,YACLC,MAAOhB,EACPiB,SAAU,SAACR,GAAD,OAAKR,EAAaQ,EAAES,OAAOF,UACrC,uBAAOH,KAAK,OACZC,YAAY,uBACZC,KAAK,WACLC,MAAOd,EACPe,SAAU,SAACR,GAAD,OAAKN,EAAYM,EAAES,OAAOF,UACpC,wBAAQH,KAAK,SAASP,UAAU,MAAhC,wBAIA,qBAAKA,UAAU,mBAAf,SAGIF,EAAOe,MAAM,EAAE,GAAGC,KAAI,SAAAT,GACpB,OAEE,sBAAwBL,UAAU,UAAlC,UACG,oDACC,qBAAIA,UAAU,OAAd,UAAsBK,EAAOX,UAA7B,IAAyCW,EAAOT,YAChD,iEAHMS,EAAOU,gBCpCVC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.584a55b6.chunk.js","sourcesContent":["\n\n\nimport React, {useState} from 'react'\n\nconst App = () => {\nconst [firstName, setFirstName]= useState(\"\");\nconst [lastName, setLastName]= useState(\"\");\nconst [people, setPeople]=useState([]);\n\nconst handleSubmit=(e)=>{\n  e.preventDefault();\n  if(firstName && lastName){\n   const person= {firstName, lastName }\n   setPeople(poeple=>{\n    return [...people, person]\n  });\n  setFirstName('');\n  setLastName('');\n  }\n  \n  \n}\n  return (\n    <>\n    <div className=\"container\">\n    <h1 class=\"heading\"> React Greetings</h1>\n<form className=\"form\" onSubmit={handleSubmit}>\n<input type=\"text\"\nplaceholder=\"Enter your first Name\"\nname=\"firstName\"\nvalue={firstName}\nonChange={(e)=>setFirstName(e.target.value)}/>\n<input type=\"text\"\nplaceholder=\"Enter Your last name\"\nname=\"lastName\"\nvalue={lastName}\nonChange={(e)=>setLastName(e.target.value)}/>\n<button type=\"submit\" className=\"btn\"> Gen</button>\n</form>\n    </div>\n    \n<div className=\"container-holder\" >\n\n  {\n    people.slice(0,1).map(person=>{\n      return (\n     \n        <div key={person.index} className=\"rose-bg\" >\n           <h1>Hello ðŸ‘‹</h1>\n            <h4 className=\"name\">{person.firstName} {person.lastName}</h4>\n            <p>Welcome to the world of React!</p>\n     \n     \n          </div>\n      )\n    })\n  }\n</div>\n   </>\n  )\n}\n\nexport default App\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}